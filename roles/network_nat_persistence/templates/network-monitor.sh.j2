#!/bin/bash
# Network Monitoring Script
# Auto-generated by Ansible - do not edit manually

LOG_FILE="/var/log/network-monitor.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Check network interface status
interface_status() {
    local interface=$1
    local status=$(ip link show $interface | grep -o "state [A-Z]*" | cut -d' ' -f2)
    echo "[$TIMESTAMP] Interface $interface: $status" >> $LOG_FILE
}

# Check NAT rule counts
nat_rules_count() {
    local prerouting_count=$(iptables -t nat -L PREROUTING --line-numbers | grep -c "^[0-9]")
    local postrouting_count=$(iptables -t nat -L POSTROUTING --line-numbers | grep -c "^[0-9]")
    echo "[$TIMESTAMP] NAT rules - PREROUTING: $prerouting_count, POSTROUTING: $postrouting_count" >> $LOG_FILE
}

# Check bridge status
bridge_status() {
    local bridge="{{ network_interfaces.bridge }}"
    if ip link show $bridge >/dev/null 2>&1; then
        local vm_count=$(brctl show $bridge | grep -c "vnet")
        echo "[$TIMESTAMP] Bridge $bridge: $vm_count active VM interfaces" >> $LOG_FILE
    else
        echo "[$TIMESTAMP] Bridge $bridge: NOT FOUND" >> $LOG_FILE
    fi
}

# Check port forwarding effectiveness
port_forward_check() {
    local guest_ip="{{ port_forwards[0].guest_ip }}"
    local guest_port="{{ port_forwards[0].guest_port }}"
    
    # Check if guest is reachable
    if ping -c 1 -W 1 $guest_ip >/dev/null 2>&1; then
        echo "[$TIMESTAMP] Guest $guest_ip is reachable" >> $LOG_FILE
    else
        echo "[$TIMESTAMP] WARNING: Guest $guest_ip is NOT reachable" >> $LOG_FILE
    fi
}

# Check network performance
network_performance() {
    local rx_bytes=$(cat /sys/class/net/{{ network_interfaces.primary }}/statistics/rx_bytes)
    local tx_bytes=$(cat /sys/class/net/{{ network_interfaces.primary }}/statistics/tx_bytes)
    local rx_packets=$(cat /sys/class/net/{{ network_interfaces.primary }}/statistics/rx_packets)
    local tx_packets=$(cat /sys/class/net/{{ network_interfaces.primary }}/statistics/tx_packets)
    
    echo "[$TIMESTAMP] Network stats - RX: ${rx_bytes} bytes (${rx_packets} packets), TX: ${tx_bytes} bytes (${tx_packets} packets)" >> $LOG_FILE
}

# Main monitoring
interface_status "{{ network_interfaces.primary }}"
interface_status "{{ network_interfaces.bridge }}"
nat_rules_count
bridge_status
port_forward_check
network_performance

# Alert on issues
if ! systemctl is-active --quiet network-setup; then
    echo "[$TIMESTAMP] ALERT: network-setup service is not active" >> $LOG_FILE
fi

if ! systemctl is-active --quiet netfilter-persistent; then
    echo "[$TIMESTAMP] ALERT: netfilter-persistent service is not active" >> $LOG_FILE
fi

# Cleanup old logs (keep last 2000 lines)
if [ -f "$LOG_FILE" ]; then
    tail -n 2000 "$LOG_FILE" > "$LOG_FILE.tmp" && mv "$LOG_FILE.tmp" "$LOG_FILE"
fi